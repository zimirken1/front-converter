{"ast":null,"code":"var _jsxFileName = \"/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyConverter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyConverter = () => {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [values, setValues] = useState({\n    USD: '',\n    EUR: '',\n    RUB: '',\n    BYN: ''\n  });\n  useEffect(() => {\n    const fetchCurrencies = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/currencies');\n        setCurrencies(response.data);\n      } catch (error) {\n        console.error(\"Error fetching currencies:\", error);\n      }\n    };\n    fetchCurrencies();\n  }, []);\n  const handleInputChange = async (currency, inputValue) => {\n    try {\n      const response = await axios.post(`http://localhost:8000/api/convert/${currency}`, {\n        value: inputValue\n      });\n      setValues({\n        USD: response.data.USD.toFixed(4),\n        EUR: response.data.EUR.toFixed(4),\n        RUB: response.data.RUB.toFixed(4),\n        BYN: response.data.BYN.toFixed(4)\n      });\n    } catch (error) {\n      console.error(\"Error converting currency:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), currencies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ['USD', 'EUR', 'RUB', 'BYN'].map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [currency, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: values[currency],\n          onChange: e => handleInputChange(currency, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, currency, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading currencies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(CurrencyConverter, \"MpXqe3Zbli0UpYykvGLsxUmSrEA=\");\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CurrencyConverter","_s","currencies","setCurrencies","values","setValues","USD","EUR","RUB","BYN","fetchCurrencies","response","get","data","error","console","handleInputChange","currency","inputValue","post","value","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","type","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyConverter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CurrencyConverter = () => {\n    const [currencies, setCurrencies] = useState([]);\n    const [values, setValues] = useState({\n        USD: '',\n        EUR: '',\n        RUB: '',\n        BYN: ''\n    });\n\n    useEffect(() => {\n        const fetchCurrencies = async () => {\n            try {\n                const response = await axios.get('http://localhost:8000/api/currencies');\n                setCurrencies(response.data);\n            } catch (error) {\n                console.error(\"Error fetching currencies:\", error);\n            }\n        };\n\n        fetchCurrencies();\n    }, []);\n\n    const handleInputChange = async (currency, inputValue) => {\n        try {\n            const response = await axios.post(`http://localhost:8000/api/convert/${currency}`, { value: inputValue });\n            setValues({\n                USD: response.data.USD.toFixed(4),\n                EUR: response.data.EUR.toFixed(4),\n                RUB: response.data.RUB.toFixed(4),\n                BYN: response.data.BYN.toFixed(4)\n            });\n        } catch (error) {\n            console.error(\"Error converting currency:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Currency Converter</h2>\n            {currencies.length > 0 ? (\n                <div>\n                    {['USD', 'EUR', 'RUB', 'BYN'].map(currency => (\n                        <div key={currency}>\n                            <label>{currency}:</label>\n                            <input\n                                type=\"number\"\n                                value={values[currency]}\n                                onChange={e => handleInputChange(currency, e.target.value)}\n                            />\n                        </div>\n                    ))}\n                </div>\n            ) : (\n                <p>Loading currencies...</p>\n            )}\n        </div>\n    );\n}\n\nexport default CurrencyConverter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}