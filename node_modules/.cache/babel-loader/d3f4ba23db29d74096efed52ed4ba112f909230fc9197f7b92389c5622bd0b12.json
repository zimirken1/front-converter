{"ast":null,"code":"var _jsxFileName = \"/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyConverter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CurrencyConverter = () => {\n  _s();\n  const [currencies, setCurrencies] = useState({});\n  const [values, setValues] = useState({\n    USD: '1',\n    EUR: '',\n    RUB: '',\n    BYN: ''\n  });\n  const [availableCurrencies, setAvailableCurrencies] = useState([]);\n  const [selectedCurrency, setSelectedCurrency] = useState('');\n  useEffect(() => {\n    const fetchInitialCurrencies = async () => {\n      try {\n        const requiredCurrencies = ['USD', 'EUR', 'RUB', 'BYN'].join(',');\n        const response = await axios.get(`http://localhost:8000/api/currencies/convert?currencies=${requiredCurrencies}`);\n        const currenciesObj = {};\n        response.data.forEach(currency => {\n          currenciesObj[currency.Cur_Abbreviation] = currency.valueToUSD;\n        });\n        setCurrencies(currenciesObj);\n        handleInputChange('USD', '1');\n      } catch (error) {\n        console.error(\"Error fetching currencies:\", error);\n      }\n    };\n    fetchInitialCurrencies();\n  }, []);\n  const handleInputChange = async (currency, inputValue) => {\n    if (inputValue === '' || inputValue === undefined) {\n      setValues(prevValues => ({\n        ...prevValues,\n        [currency]: ''\n      }));\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8000/api/currencies/convert/${currency}`, {\n        value: inputValue\n      });\n      setValues({\n        ...values,\n        ...response.data\n      });\n    } catch (error) {\n      console.error(\"Error converting currency:\", error);\n    }\n  };\n  const handleAddCurrency = async () => {\n    if (selectedCurrency && !values[selectedCurrency]) {\n      // Fetching the value of the new currency if it hasn't been fetched before\n      if (!currencies[selectedCurrency]) {\n        try {\n          const response = await axios.get(`http://localhost:8000/api/currencies/convert?currencies=${selectedCurrency}`);\n          const currencyData = response.data.find(cur => cur.Cur_Abbreviation === selectedCurrency);\n          setCurrencies(prevCurrencies => ({\n            ...prevCurrencies,\n            [selectedCurrency]: currencyData.valueToUSD\n          }));\n        } catch (error) {\n          console.error(\"Error fetching new currency:\", error);\n          return;\n        }\n      }\n      setValues(prevValues => ({\n        ...prevValues,\n        [selectedCurrency]: ''\n      }));\n    }\n  };\n  const fetchAllCurrencies = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/currencies');\n      setAvailableCurrencies(response.data.map(currency => currency.Cur_Abbreviation));\n    } catch (error) {\n      console.error(\"Error fetching all currencies:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), Object.keys(currencies).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Object.keys(values).map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [currency, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: values[currency],\n          onChange: e => handleInputChange(currency, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, currency, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchAllCurrencies,\n          children: \"Load Available Currencies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), availableCurrencies.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCurrency,\n            onChange: e => setSelectedCurrency(e.target.value),\n            children: availableCurrencies.filter(currency => !values[currency]).map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: currency,\n              children: currency\n            }, currency, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddCurrency,\n            children: \"Add Currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading currencies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(CurrencyConverter, \"OUQ2PqfFuqrHcCEfRqa8mDHQbeE=\");\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CurrencyConverter","_s","currencies","setCurrencies","values","setValues","USD","EUR","RUB","BYN","availableCurrencies","setAvailableCurrencies","selectedCurrency","setSelectedCurrency","fetchInitialCurrencies","requiredCurrencies","join","response","get","currenciesObj","data","forEach","currency","Cur_Abbreviation","valueToUSD","handleInputChange","error","console","inputValue","undefined","prevValues","post","value","handleAddCurrency","currencyData","find","cur","prevCurrencies","fetchAllCurrencies","map","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","type","onChange","e","target","onClick","filter","_c","$RefreshReg$"],"sources":["/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyConverter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CurrencyConverter = () => {\n    const [currencies, setCurrencies] = useState({});\n    const [values, setValues] = useState({\n        USD: '1',\n        EUR: '',\n        RUB: '',\n        BYN: ''\n    });\n    const [availableCurrencies, setAvailableCurrencies] = useState([]);\n    const [selectedCurrency, setSelectedCurrency] = useState('');\n\n    useEffect(() => {\n        const fetchInitialCurrencies = async () => {\n            try {\n                const requiredCurrencies = ['USD', 'EUR', 'RUB', 'BYN'].join(',');\n                const response = await axios.get(`http://localhost:8000/api/currencies/convert?currencies=${requiredCurrencies}`);\n                const currenciesObj = {};\n                response.data.forEach(currency => {\n                    currenciesObj[currency.Cur_Abbreviation] = currency.valueToUSD;\n                });\n                setCurrencies(currenciesObj);\n                handleInputChange('USD', '1');\n            } catch (error) {\n                console.error(\"Error fetching currencies:\", error);\n            }\n        };\n\n        fetchInitialCurrencies();\n    }, []);\n\n    const handleInputChange = async (currency, inputValue) => {\n        if (inputValue === '' || inputValue === undefined) {\n            setValues(prevValues => ({ ...prevValues, [currency]: '' }));\n            return;\n        }\n\n        try {\n            const response = await axios.post(`http://localhost:8000/api/currencies/convert/${currency}`, { value: inputValue });\n            setValues({\n                ...values,\n                ...response.data\n            });\n        } catch (error) {\n            console.error(\"Error converting currency:\", error);\n        }\n    };\n\n    const handleAddCurrency = async () => {\n        if (selectedCurrency && !values[selectedCurrency]) {\n            // Fetching the value of the new currency if it hasn't been fetched before\n            if (!currencies[selectedCurrency]) {\n                try {\n                    const response = await axios.get(`http://localhost:8000/api/currencies/convert?currencies=${selectedCurrency}`);\n                    const currencyData = response.data.find(cur => cur.Cur_Abbreviation === selectedCurrency);\n                    setCurrencies(prevCurrencies => ({\n                        ...prevCurrencies,\n                        [selectedCurrency]: currencyData.valueToUSD\n                    }));\n                } catch (error) {\n                    console.error(\"Error fetching new currency:\", error);\n                    return;\n                }\n            }\n            setValues(prevValues => ({\n                ...prevValues,\n                [selectedCurrency]: ''\n            }));\n        }\n    };\n\n    const fetchAllCurrencies = async () => {\n        try {\n            const response = await axios.get('http://localhost:8000/api/currencies');\n            setAvailableCurrencies(response.data.map(currency => currency.Cur_Abbreviation));\n        } catch (error) {\n            console.error(\"Error fetching all currencies:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Currency Converter</h2>\n            {Object.keys(currencies).length > 0 ? (\n                <div>\n                    {Object.keys(values).map(currency => (\n                        <div key={currency}>\n                            <label>{currency}:</label>\n                            <input\n                                type=\"number\"\n                                value={values[currency]}\n                                onChange={e => handleInputChange(currency, e.target.value)}\n                            />\n                        </div>\n                    ))}\n\n                    <div>\n                        <button onClick={fetchAllCurrencies}>Load Available Currencies</button>\n                        {availableCurrencies.length > 0 && (\n                            <>\n                                <select value={selectedCurrency} onChange={e => setSelectedCurrency(e.target.value)}>\n                                    {availableCurrencies.filter(currency => !values[currency]).map(currency => (\n                                        <option key={currency} value={currency}>\n                                            {currency}\n                                        </option>\n                                    ))}\n                                </select>\n                                <button onClick={handleAddCurrency}>Add Currency</button>\n                            </>\n                        )}\n                    </div>\n                </div>\n            ) : (\n                <p>Loading currencies...</p>\n            )}\n        </div>\n    );\n}\n\nexport default CurrencyConverter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}