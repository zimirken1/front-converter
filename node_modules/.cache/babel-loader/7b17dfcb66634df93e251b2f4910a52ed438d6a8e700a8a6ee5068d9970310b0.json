{"ast":null,"code":"var _jsxFileName = \"/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyConverter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyConverter = () => {\n  _s();\n  const [currencies, setCurrencies] = useState({});\n  const [values, setValues] = useState({\n    USD: '1',\n    EUR: '',\n    RUB: '',\n    BYN: ''\n  });\n  useEffect(() => {\n    const fetchInitialCurrencies = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/currencies');\n        const requiredCurrencies = ['USD', 'EUR', 'RUB', 'BYN'];\n        const filteredCurrencies = response.data.filter(currency => requiredCurrencies.includes(currency.Cur_Abbreviation));\n        const currenciesObj = {};\n        filteredCurrencies.forEach(currency => {\n          currenciesObj[currency.Cur_Abbreviation] = currency.valueToUSD;\n        });\n        setCurrencies(currenciesObj);\n\n        // Set initial USD value and convert it\n        handleInputChange('USD', '1');\n      } catch (error) {\n        console.error(\"Error fetching currencies:\", error);\n      }\n    };\n    fetchInitialCurrencies();\n  }, []);\n  const handleInputChange = async (currency, inputValue) => {\n    try {\n      const response = await axios.post(`http://localhost:8000/api/currencies/convert/${currency}`, {\n        value: inputValue\n      });\n      setValues({\n        USD: response.data.USD,\n        EUR: response.data.EUR,\n        RUB: response.data.RUB,\n        BYN: response.data.BYN\n      });\n    } catch (error) {\n      console.error(\"Error converting currency:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), Object.keys(currencies).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ['USD', 'EUR', 'RUB', 'BYN'].map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [currency, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: values[currency],\n          onChange: e => handleInputChange(currency, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)]\n      }, currency, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading currencies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(CurrencyConverter, \"NJUewUmEnSGb4xmzNWgsVwT1eoE=\");\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CurrencyConverter","_s","currencies","setCurrencies","values","setValues","USD","EUR","RUB","BYN","fetchInitialCurrencies","response","get","requiredCurrencies","filteredCurrencies","data","filter","currency","includes","Cur_Abbreviation","currenciesObj","forEach","valueToUSD","handleInputChange","error","console","inputValue","post","value","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","map","type","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyConverter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CurrencyConverter = () => {\n    const [currencies, setCurrencies] = useState({});\n    const [values, setValues] = useState({\n        USD: '1',\n        EUR: '',\n        RUB: '',\n        BYN: ''\n    });\n\n    useEffect(() => {\n        const fetchInitialCurrencies = async () => {\n            try {\n                const response = await axios.get('http://localhost:8000/api/currencies');\n                const requiredCurrencies = ['USD', 'EUR', 'RUB', 'BYN'];\n                const filteredCurrencies = response.data.filter(currency => requiredCurrencies.includes(currency.Cur_Abbreviation));\n                const currenciesObj = {};\n                filteredCurrencies.forEach(currency => {\n                    currenciesObj[currency.Cur_Abbreviation] = currency.valueToUSD;\n                });\n                setCurrencies(currenciesObj);\n\n                // Set initial USD value and convert it\n                handleInputChange('USD', '1');\n            } catch (error) {\n                console.error(\"Error fetching currencies:\", error);\n            }\n        };\n\n        fetchInitialCurrencies();\n    }, []);\n\n    const handleInputChange = async (currency, inputValue) => {\n        try {\n            const response = await axios.post(`http://localhost:8000/api/currencies/convert/${currency}`, { value: inputValue });\n            setValues({\n                USD: response.data.USD,\n                EUR: response.data.EUR,\n                RUB: response.data.RUB,\n                BYN: response.data.BYN,\n            });\n        } catch (error) {\n            console.error(\"Error converting currency:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Currency Converter</h2>\n            {Object.keys(currencies).length > 0 ? (\n                <div>\n                    {['USD', 'EUR', 'RUB', 'BYN'].map(currency => (\n                        <div key={currency}>\n                            <label>{currency}:</label>\n                            <input\n                                type=\"number\"\n                                value={values[currency]}\n                                onChange={e => handleInputChange(currency, e.target.value)}\n                            />\n                        </div>\n                    ))}\n                </div>\n            ) : (\n                <p>Loading currencies...</p>\n            )}\n        </div>\n    );\n}\n\nexport default CurrencyConverter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}