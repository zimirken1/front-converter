{"ast":null,"code":"var _jsxFileName = \"/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CurrencyInput from '../components/CurrencyInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrencyList() {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [values, setValues] = useState({\n    USD: 1\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('https://api.nbrb.by/exrates/rates?periodicity=0').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      return response.json();\n    }).then(data => {\n      const usdRate = data.find(item => item.Cur_Abbreviation === 'USD').Cur_OfficialRate;\n      const relevantCurrencies = [...data.filter(item => ['USD', 'EUR', 'RUB'].includes(item.Cur_Abbreviation)), {\n        Cur_Abbreviation: 'BYN',\n        Cur_OfficialRate: usdRate\n      }];\n      setCurrencies(relevantCurrencies);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error.message);\n      setIsLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    handleInputChange({\n      target: {\n        value: 1\n      }\n    }, 'USD');\n  }, [currencies]);\n  function handleInputChange(e, abbreviation) {\n    const newValue = parseFloat(e.target.value || 0);\n    const usdCurrency = currencies.find(cur => cur.Cur_Abbreviation === 'USD');\n    const targetCurrency = currencies.find(cur => cur.Cur_Abbreviation === abbreviation);\n    const updatedValues = {\n      ...values\n    };\n    if (!usdCurrency || !targetCurrency) {\n      return;\n    }\n    const usdRate = usdCurrency.Cur_OfficialRate;\n    if (abbreviation === 'USD') {\n      for (const currency of currencies) {\n        const currentRate = currency.Cur_OfficialRate;\n        updatedValues[currency.Cur_Abbreviation] = newValue * (currentRate / usdRate);\n      }\n    } else {\n      const targetRate = targetCurrency.Cur_OfficialRate;\n      const usdValue = abbreviation === 'BYN' ? newValue / usdRate : newValue * usdRate / targetRate;\n      for (const currency of currencies) {\n        const currentRate = currency.Cur_OfficialRate;\n        updatedValues[currency.Cur_Abbreviation] = usdValue * (currentRate / usdRate);\n      }\n    }\n    setValues(updatedValues);\n  }\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currencies.map(currency => /*#__PURE__*/_jsxDEV(CurrencyInput, {\n      abbreviation: currency.Cur_Abbreviation,\n      value: values[currency.Cur_Abbreviation],\n      onChange: handleInputChange\n    }, currency.Cur_Abbreviation, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(CurrencyList, \"tdyDo5LdfQVPyYOZ/nfoowvxAmc=\");\n_c = CurrencyList;\nexport default CurrencyList;\nvar _c;\n$RefreshReg$(_c, \"CurrencyList\");","map":{"version":3,"names":["React","useState","useEffect","CurrencyInput","jsxDEV","_jsxDEV","CurrencyList","_s","currencies","setCurrencies","values","setValues","USD","isLoading","setIsLoading","error","setError","fetch","then","response","ok","Error","json","data","usdRate","find","item","Cur_Abbreviation","Cur_OfficialRate","relevantCurrencies","filter","includes","catch","message","handleInputChange","target","value","e","abbreviation","newValue","parseFloat","usdCurrency","cur","targetCurrency","updatedValues","currency","currentRate","targetRate","usdValue","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onChange","_c","$RefreshReg$"],"sources":["/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CurrencyInput from '../components/CurrencyInput';\n\nfunction CurrencyList() {\n    const [currencies, setCurrencies] = useState([]);\n    const [values, setValues] = useState({ USD: 1 });\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch('https://api.nbrb.by/exrates/rates?periodicity=0')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch data');\n                }\n                return response.json();\n            })\n            .then(data => {\n                const usdRate = data.find(item => item.Cur_Abbreviation === 'USD').Cur_OfficialRate;\n                const relevantCurrencies = [...data.filter(item =>\n                    ['USD', 'EUR', 'RUB'].includes(item.Cur_Abbreviation)\n                ), { Cur_Abbreviation: 'BYN', Cur_OfficialRate: usdRate }];\n                setCurrencies(relevantCurrencies);\n                setIsLoading(false);\n            })\n            .catch(error => {\n                setError(error.message);\n                setIsLoading(false);\n            });\n    }, []);\n\n    useEffect(() => {\n        handleInputChange({ target: { value: 1 } }, 'USD');\n    }, [currencies]);\n\n    function handleInputChange(e, abbreviation) {\n        const newValue = parseFloat(e.target.value || 0);\n        const usdCurrency = currencies.find(cur => cur.Cur_Abbreviation === 'USD');\n        const targetCurrency = currencies.find(cur => cur.Cur_Abbreviation === abbreviation);\n        const updatedValues = { ...values };\n\n        if (!usdCurrency || !targetCurrency) {\n            return;\n        }\n\n        const usdRate = usdCurrency.Cur_OfficialRate;\n        if (abbreviation === 'USD') {\n            for (const currency of currencies) {\n                const currentRate = currency.Cur_OfficialRate;\n                updatedValues[currency.Cur_Abbreviation] = newValue * (currentRate / usdRate);\n            }\n        } else {\n            const targetRate = targetCurrency.Cur_OfficialRate;\n            const usdValue = abbreviation === 'BYN' ? newValue / usdRate : newValue * usdRate / targetRate;\n\n            for (const currency of currencies) {\n                const currentRate = currency.Cur_OfficialRate;\n                updatedValues[currency.Cur_Abbreviation] = usdValue * (currentRate / usdRate);\n            }\n        }\n\n        setValues(updatedValues);\n    }\n\n    if (isLoading) return <p>Loading...</p>;\n    if (error) return <p>{error}</p>;\n\n    return (\n        <div>\n            {currencies.map(currency => (\n                <CurrencyInput\n                    key={currency.Cur_Abbreviation}\n                    abbreviation={currency.Cur_Abbreviation}\n                    value={values[currency.Cur_Abbreviation]}\n                    onChange={handleInputChange}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default CurrencyList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}