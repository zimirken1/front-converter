{"ast":null,"code":"var _jsxFileName = \"/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CurrencyInput from '../components/CurrencyInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrencyList() {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [values, setValues] = useState({\n    USD: 1\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('https://api.nbrb.by/exrates/rates?periodicity=0').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      return response.json();\n    }).then(data => {\n      const usdRate = data.find(item => item.Cur_Abbreviation === 'USD').Cur_OfficialRate;\n      const relevantCurrencies = data.filter(item => ['USD', 'EUR', 'RUB'].includes(item.Cur_Abbreviation));\n\n      // Добавляем BYN в список валют с той же официальной ставкой, что и у USD\n      relevantCurrencies.push({\n        Cur_ID: '999BYN',\n        // Просто даем ему произвольный ID\n        Cur_Abbreviation: 'BYN',\n        Cur_OfficialRate: usdRate\n      });\n      setCurrencies(relevantCurrencies);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error.message);\n      setIsLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    handleInputChange({\n      target: {\n        value: 1\n      }\n    }, 'USD');\n  }, [currencies]);\n  function handleInputChange(e, abbreviation) {\n    const newValue = parseFloat(e.target.value || 0);\n    const updatedValues = {};\n    for (const currency of currencies) {\n      const usdRate = currencies.find(cur => cur.Cur_Abbreviation === 'USD').Cur_OfficialRate;\n      const currentRate = currency.Cur_OfficialRate;\n      if (abbreviation === 'USD') {\n        updatedValues[currency.Cur_Abbreviation] = newValue * (currentRate / usdRate);\n      } else if (abbreviation === currency.Cur_Abbreviation) {\n        if (abbreviation === 'BYN') {\n          updatedValues['USD'] = 1 / (newValue / usdRate);\n          updatedValues['BYN'] = newValue;\n        } else {\n          updatedValues['USD'] = newValue / (currentRate / usdRate);\n          updatedValues[currency.Cur_Abbreviation] = newValue;\n        }\n      } else {\n        const relativeRate = currentRate / currencies.find(cur => cur.Cur_Abbreviation === abbreviation).Cur_OfficialRate;\n        updatedValues[currency.Cur_Abbreviation] = newValue * relativeRate;\n      }\n    }\n    setValues(updatedValues);\n  }\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currencies.map(currency => /*#__PURE__*/_jsxDEV(CurrencyInput, {\n      abbreviation: currency.Cur_Abbreviation,\n      value: values[currency.Cur_Abbreviation],\n      onChange: handleInputChange\n    }, currency.Cur_ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(CurrencyList, \"tdyDo5LdfQVPyYOZ/nfoowvxAmc=\");\n_c = CurrencyList;\nexport default CurrencyList;\nvar _c;\n$RefreshReg$(_c, \"CurrencyList\");","map":{"version":3,"names":["React","useState","useEffect","CurrencyInput","jsxDEV","_jsxDEV","CurrencyList","_s","currencies","setCurrencies","values","setValues","USD","isLoading","setIsLoading","error","setError","fetch","then","response","ok","Error","json","data","usdRate","find","item","Cur_Abbreviation","Cur_OfficialRate","relevantCurrencies","filter","includes","push","Cur_ID","catch","message","handleInputChange","target","value","e","abbreviation","newValue","parseFloat","updatedValues","currency","cur","currentRate","relativeRate","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onChange","_c","$RefreshReg$"],"sources":["/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CurrencyInput from '../components/CurrencyInput';\n\nfunction CurrencyList() {\n    const [currencies, setCurrencies] = useState([]);\n    const [values, setValues] = useState({ USD: 1 });\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch('https://api.nbrb.by/exrates/rates?periodicity=0')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch data');\n                }\n                return response.json();\n            })\n            .then(data => {\n                const usdRate = data.find(item => item.Cur_Abbreviation === 'USD').Cur_OfficialRate;\n                const relevantCurrencies = data.filter(item =>\n                    ['USD', 'EUR', 'RUB'].includes(item.Cur_Abbreviation)\n                );\n\n                // Добавляем BYN в список валют с той же официальной ставкой, что и у USD\n                relevantCurrencies.push({\n                    Cur_ID: '999BYN', // Просто даем ему произвольный ID\n                    Cur_Abbreviation: 'BYN',\n                    Cur_OfficialRate: usdRate\n                });\n\n                setCurrencies(relevantCurrencies);\n                setIsLoading(false);\n            })\n            .catch(error => {\n                setError(error.message);\n                setIsLoading(false);\n            });\n    }, []);\n\n    useEffect(() => {\n        handleInputChange({ target: { value: 1 } }, 'USD');\n    }, [currencies]);\n\n    function handleInputChange(e, abbreviation) {\n        const newValue = parseFloat(e.target.value || 0);\n        const updatedValues = {};\n\n        for (const currency of currencies) {\n            const usdRate = currencies.find(cur => cur.Cur_Abbreviation === 'USD').Cur_OfficialRate;\n            const currentRate = currency.Cur_OfficialRate;\n\n            if (abbreviation === 'USD') {\n                updatedValues[currency.Cur_Abbreviation] = newValue * (currentRate / usdRate);\n            } else if (abbreviation === currency.Cur_Abbreviation) {\n                if (abbreviation === 'BYN') {\n                    updatedValues['USD'] = 1 / (newValue / usdRate);\n                    updatedValues['BYN'] = newValue;\n                } else {\n                    updatedValues['USD'] = newValue / (currentRate / usdRate);\n                    updatedValues[currency.Cur_Abbreviation] = newValue;\n                }\n            } else {\n                const relativeRate = currentRate / currencies.find(cur => cur.Cur_Abbreviation === abbreviation).Cur_OfficialRate;\n                updatedValues[currency.Cur_Abbreviation] = newValue * relativeRate;\n            }\n        }\n\n        setValues(updatedValues);\n    }\n\n    if (isLoading) return <p>Loading...</p>;\n    if (error) return <p>{error}</p>;\n\n    return (\n        <div>\n            {currencies.map(currency => (\n                <CurrencyInput\n                    key={currency.Cur_ID}\n                    abbreviation={currency.Cur_Abbreviation}\n                    value={values[currency.Cur_Abbreviation]}\n                    onChange={handleInputChange}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default CurrencyList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}