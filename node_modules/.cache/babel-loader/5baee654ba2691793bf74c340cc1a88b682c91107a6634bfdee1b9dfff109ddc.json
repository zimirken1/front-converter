{"ast":null,"code":"var _jsxFileName = \"/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CurrencyInput from '../components/CurrencyInput';\nimport CurrencyDisplay from '../components/CurrencyDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrencyList() {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [values, setValues] = useState({\n    USD: 1\n  }); // Инициализация инпута для доллара значением 1\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('https://api.nbrb.by/exrates/rates?periodicity=0').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      return response.json();\n    }).then(data => {\n      const relevantCurrencies = data.filter(item => ['USD', 'EUR', 'RUB', 'BYN'].includes(item.Cur_Abbreviation));\n      setCurrencies(relevantCurrencies);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error.message);\n      setIsLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    handleInputChange({\n      target: {\n        value: 1\n      }\n    }, 'USD');\n  }, [currencies]);\n  function handleInputChange(e, abbreviation) {\n    const newValue = parseFloat(e.target.value || 0);\n    const updatedValues = {};\n    for (const currency of currencies) {\n      if (currency.Cur_Abbreviation === 'USD') {\n        updatedValues[currency.Cur_Abbreviation] = abbreviation === 'USD' ? newValue : newValue * currencies.find(cur => cur.Cur_Abbreviation === abbreviation).Cur_OfficialRate;\n      } else {\n        const relativeRate = currency.Cur_OfficialRate / currencies.find(cur => cur.Cur_Abbreviation === 'USD').Cur_OfficialRate;\n        updatedValues[currency.Cur_Abbreviation] = abbreviation === 'USD' ? newValue * relativeRate : newValue * relativeRate / currencies.find(cur => cur.Cur_Abbreviation === abbreviation).Cur_OfficialRate;\n      }\n    }\n    setValues(updatedValues);\n  }\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currencies.map(currency => /*#__PURE__*/_jsxDEV(CurrencyInput, {\n      abbreviation: currency.Cur_Abbreviation,\n      value: values[currency.Cur_Abbreviation],\n      onChange: handleInputChange\n    }, currency.Cur_ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(CurrencyDisplay, {\n      value: values.BYN\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(CurrencyList, \"tdyDo5LdfQVPyYOZ/nfoowvxAmc=\");\n_c = CurrencyList;\nexport default CurrencyList;\nvar _c;\n$RefreshReg$(_c, \"CurrencyList\");","map":{"version":3,"names":["React","useState","useEffect","CurrencyInput","CurrencyDisplay","jsxDEV","_jsxDEV","CurrencyList","_s","currencies","setCurrencies","values","setValues","USD","isLoading","setIsLoading","error","setError","fetch","then","response","ok","Error","json","data","relevantCurrencies","filter","item","includes","Cur_Abbreviation","catch","message","handleInputChange","target","value","e","abbreviation","newValue","parseFloat","updatedValues","currency","find","cur","Cur_OfficialRate","relativeRate","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onChange","Cur_ID","BYN","_c","$RefreshReg$"],"sources":["/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CurrencyInput from '../components/CurrencyInput';\nimport CurrencyDisplay from '../components/CurrencyDisplay';\n\nfunction CurrencyList() {\n    const [currencies, setCurrencies] = useState([]);\n    const [values, setValues] = useState({ USD: 1 }); // Инициализация инпута для доллара значением 1\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch('https://api.nbrb.by/exrates/rates?periodicity=0')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch data');\n                }\n                return response.json();\n            })\n            .then(data => {\n                const relevantCurrencies = data.filter(item =>\n                    ['USD', 'EUR', 'RUB', 'BYN'].includes(item.Cur_Abbreviation)\n                );\n                setCurrencies(relevantCurrencies);\n                setIsLoading(false);\n            })\n            .catch(error => {\n                setError(error.message);\n                setIsLoading(false);\n            });\n    }, []);\n\n    useEffect(() => {\n        handleInputChange({ target: { value: 1 } }, 'USD');\n    }, [currencies]);\n\n    function handleInputChange(e, abbreviation) {\n        const newValue = parseFloat(e.target.value || 0);\n        const updatedValues = {};\n\n        for (const currency of currencies) {\n            if (currency.Cur_Abbreviation === 'USD') {\n                updatedValues[currency.Cur_Abbreviation] = abbreviation === 'USD'\n                    ? newValue\n                    : newValue * currencies.find(cur => cur.Cur_Abbreviation === abbreviation).Cur_OfficialRate;\n            } else {\n                const relativeRate = currency.Cur_OfficialRate / currencies.find(cur => cur.Cur_Abbreviation === 'USD').Cur_OfficialRate;\n                updatedValues[currency.Cur_Abbreviation] = abbreviation === 'USD'\n                    ? newValue * relativeRate\n                    : newValue * relativeRate / currencies.find(cur => cur.Cur_Abbreviation === abbreviation).Cur_OfficialRate;\n            }\n        }\n\n        setValues(updatedValues);\n    }\n\n    if (isLoading) return <p>Loading...</p>;\n    if (error) return <p>{error}</p>;\n\n    return (\n        <div>\n            {currencies.map(currency => (\n                <CurrencyInput\n                    key={currency.Cur_ID}\n                    abbreviation={currency.Cur_Abbreviation}\n                    value={values[currency.Cur_Abbreviation]}\n                    onChange={handleInputChange}\n                />\n            ))}\n            <CurrencyDisplay value={values.BYN} />\n        </div>\n    );\n}\n\nexport default CurrencyList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}