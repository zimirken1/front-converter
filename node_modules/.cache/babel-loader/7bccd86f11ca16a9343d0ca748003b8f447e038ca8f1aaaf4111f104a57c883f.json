{"ast":null,"code":"var _jsxFileName = \"/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyConverter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useDebounce } from \"./hooks/useDebounce\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyConverter = () => {\n  _s();\n  const initialCurrencies = ['USD', 'EUR', 'RUB', 'BYN'];\n  const [values, setValues] = useState({\n    USD: '1',\n    EUR: '',\n    RUB: '',\n    BYN: ''\n  });\n  const [availableCurrencies, setAvailableCurrencies] = useState(initialCurrencies);\n  const [allCurrencies, setAllCurrencies] = useState([]);\n  const [selectedCurrency, setSelectedCurrency] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const allCurrenciesResponse = await axios.get('http://localhost:8000/api/currencies');\n        setAllCurrencies(allCurrenciesResponse.data.map(currency => currency.Cur_Abbreviation));\n        const initialConversionsResponse = await axios.post(`http://localhost:8000/api/currencies/convert/USD`, {\n          value: '1'\n        });\n        setValues(prevValues => ({\n          ...prevValues,\n          ...initialConversionsResponse.data\n        }));\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleInputChange = useCallback(async (currency, inputValue) => {\n    if (!/^[0-9.,]*$/.test(inputValue)) {\n      return;\n    }\n    if (inputValue === '' || inputValue === undefined) {\n      setValues(prevValues => ({\n        ...prevValues,\n        [currency]: ''\n      }));\n      return;\n    }\n    try {\n      // Конвертировать введенное значение в базовую валюту (например, USD)\n      const baseCurrencyResponse = await axios.post(`http://localhost:8000/api/currencies/convert/${currency}`, {\n        value: inputValue,\n        toCurrency: 'USD'\n      });\n      const baseValue = baseCurrencyResponse.data.USD;\n\n      // Теперь конвертируйте базовое значение во все доступные валюты\n      const allConversionsResponse = await axios.post(`http://localhost:8000/api/currencies/convert/USD`, {\n        value: baseValue\n      });\n      setValues(prevValues => ({\n        ...prevValues,\n        ...allConversionsResponse.data\n      }));\n    } catch (error) {\n      console.error(\"Error converting currency:\", error);\n    }\n  }, []);\n  const debouncedHandleInputChange = useDebounce(handleInputChange, 300);\n  const addCurrency = async () => {\n    if (selectedCurrency && !availableCurrencies.includes(selectedCurrency)) {\n      setAvailableCurrencies(prevCurrencies => [...prevCurrencies, selectedCurrency]);\n      setValues(prevValues => ({\n        ...prevValues,\n        [selectedCurrency]: ''\n      }));\n      try {\n        const response = await axios.post(`http://localhost:8000/api/currencies/convert/USD`, {\n          value: values.USD\n        });\n        setValues(prevValues => ({\n          ...prevValues,\n          [selectedCurrency]: response.data[selectedCurrency]\n        }));\n      } catch (error) {\n        console.error(\"Error converting for new currency:\", error);\n      }\n    }\n  };\n  const removeCurrency = currencyToRemove => {\n    setAvailableCurrencies(prevCurrencies => prevCurrencies.filter(currency => currency !== currencyToRemove));\n    setValues(prevValues => {\n      const updatedValues = {\n        ...prevValues\n      };\n      delete updatedValues[currencyToRemove];\n      return updatedValues;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [availableCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [currency, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\" // Поменял на text, чтобы можно было использовать pattern\n          ,\n          pattern: \"^\\\\d*\\\\.?\\\\d*$\",\n          value: values[currency] || '',\n          onChange: e => debouncedHandleInputChange(currency, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), !initialCurrencies.includes(currency) && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeCurrency(currency),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)]\n      }, currency, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCurrency,\n          onChange: e => setSelectedCurrency(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), allCurrencies.filter(currency => !availableCurrencies.includes(currency)).map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: currency,\n            children: currency\n          }, currency, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCurrency,\n          children: \"Add Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(CurrencyConverter, \"Jjxmt4m2v/NGD9rObWn11b07aqI=\", false, function () {\n  return [useDebounce];\n});\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useDebounce","jsxDEV","_jsxDEV","CurrencyConverter","_s","initialCurrencies","values","setValues","USD","EUR","RUB","BYN","availableCurrencies","setAvailableCurrencies","allCurrencies","setAllCurrencies","selectedCurrency","setSelectedCurrency","fetchData","allCurrenciesResponse","get","data","map","currency","Cur_Abbreviation","initialConversionsResponse","post","value","prevValues","error","console","handleInputChange","inputValue","test","undefined","baseCurrencyResponse","toCurrency","baseValue","allConversionsResponse","debouncedHandleInputChange","addCurrency","includes","prevCurrencies","response","removeCurrency","currencyToRemove","filter","updatedValues","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","type","pattern","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyConverter.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport {useDebounce} from \"./hooks/useDebounce\";\n\nconst CurrencyConverter = () => {\n    const initialCurrencies = ['USD', 'EUR', 'RUB', 'BYN'];\n\n    const [values, setValues] = useState({\n        USD: '1',\n        EUR: '',\n        RUB: '',\n        BYN: ''\n    });\n    const [availableCurrencies, setAvailableCurrencies] = useState(initialCurrencies);\n    const [allCurrencies, setAllCurrencies] = useState([]);\n    const [selectedCurrency, setSelectedCurrency] = useState('');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const allCurrenciesResponse = await axios.get('http://localhost:8000/api/currencies');\n                setAllCurrencies(allCurrenciesResponse.data.map(currency => currency.Cur_Abbreviation));\n\n                const initialConversionsResponse = await axios.post(`http://localhost:8000/api/currencies/convert/USD`, { value: '1' });\n                setValues(prevValues => ({\n                    ...prevValues,\n                    ...initialConversionsResponse.data\n                }));\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const handleInputChange = useCallback(async (currency, inputValue) => {\n        if (!/^[0-9.,]*$/.test(inputValue)) {\n            return;\n        }\n\n        if (inputValue === '' || inputValue === undefined) {\n            setValues(prevValues => ({ ...prevValues, [currency]: '' }));\n            return;\n        }\n\n        try {\n            // Конвертировать введенное значение в базовую валюту (например, USD)\n            const baseCurrencyResponse = await axios.post(`http://localhost:8000/api/currencies/convert/${currency}`, { value: inputValue, toCurrency: 'USD' });\n            const baseValue = baseCurrencyResponse.data.USD;\n\n            // Теперь конвертируйте базовое значение во все доступные валюты\n            const allConversionsResponse = await axios.post(`http://localhost:8000/api/currencies/convert/USD`, { value: baseValue });\n            setValues(prevValues => ({\n                ...prevValues,\n                ...allConversionsResponse.data\n            }));\n        } catch (error) {\n            console.error(\"Error converting currency:\", error);\n        }\n    }, []);\n\n    const debouncedHandleInputChange = useDebounce(handleInputChange, 300);\n\n    const addCurrency = async () => {\n        if (selectedCurrency && !availableCurrencies.includes(selectedCurrency)) {\n            setAvailableCurrencies(prevCurrencies => [...prevCurrencies, selectedCurrency]);\n            setValues(prevValues => ({ ...prevValues, [selectedCurrency]: '' }));\n\n            try {\n                const response = await axios.post(`http://localhost:8000/api/currencies/convert/USD`, { value: values.USD });\n                setValues(prevValues => ({\n                    ...prevValues,\n                    [selectedCurrency]: response.data[selectedCurrency]\n                }));\n            } catch (error) {\n                console.error(\"Error converting for new currency:\", error);\n            }\n        }\n    };\n\n    const removeCurrency = (currencyToRemove) => {\n        setAvailableCurrencies(prevCurrencies => prevCurrencies.filter(currency => currency !== currencyToRemove));\n        setValues(prevValues => {\n            const updatedValues = { ...prevValues };\n            delete updatedValues[currencyToRemove];\n            return updatedValues;\n        });\n    };\n\n    return (\n        <div>\n            <h2>Currency Converter</h2>\n            <div>\n                {availableCurrencies.map(currency => (\n                    <div key={currency} style={{ marginBottom: \"10px\" }}>\n                        <label>{currency}:</label>\n                        <input\n                            type=\"text\"  // Поменял на text, чтобы можно было использовать pattern\n                            pattern=\"^\\d*\\.?\\d*$\"\n                            value={values[currency] || ''}\n                            onChange={e => debouncedHandleInputChange(currency, e.target.value)}\n                        />\n                        {!initialCurrencies.includes(currency) && (\n                            <button onClick={() => removeCurrency(currency)}>Remove</button>\n                        )}\n                    </div>\n                ))}\n                <div>\n                    <select value={selectedCurrency} onChange={e => setSelectedCurrency(e.target.value)}>\n                        <option value=\"\">Select currency</option>\n                        {allCurrencies.filter(currency => !availableCurrencies.includes(currency)).map(currency => (\n                            <option key={currency} value={currency}>\n                                {currency}\n                            </option>\n                        ))}\n                    </select>\n                    <button onClick={addCurrency}>Add Currency</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CurrencyConverter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}