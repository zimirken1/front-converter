{"ast":null,"code":"var _jsxFileName = \"/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [rates, setRates] = useState(null);\n  useEffect(() => {\n    fetchRates();\n  }, []);\n  const fetchRates = async () => {\n    try {\n      const currencies = ['USD', 'EUR', 'RUB', 'BYN'];\n      const promises = currencies.map(cur => fetch(`https://api.nbrb.by/api/exrates/rates/${cur}?parammode=2`));\n      const results = await Promise.all(promises);\n      const data = await Promise.all(results.map(result => result.json()));\n      const ratesToUSD = data.reduce((acc, curr) => {\n        if (curr.Cur_Abbreviation === 'USD') {\n          acc['USD'] = 1;\n        } else {\n          acc[curr.Cur_Abbreviation] = curr.Cur_OfficialRate / data.find(item => item.Cur_Abbreviation === 'USD').Cur_OfficialRate;\n        }\n        return acc;\n      }, {});\n      setRates(ratesToUSD);\n    } catch (error) {\n      console.error('Failed to fetch exchange rates:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exchange Rates to USD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), rates ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(rates).map(([currency, rate]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [currency, \": \", rate]\n      }, currency, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"8lTWMbCnwl8RYd91rWMx6+FomcQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","rates","setRates","fetchRates","currencies","promises","map","cur","fetch","results","Promise","all","data","result","json","ratesToUSD","reduce","acc","curr","Cur_Abbreviation","Cur_OfficialRate","find","item","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","currency","rate","_c","$RefreshReg$"],"sources":["/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css'\n\nfunction App() {\n    const [rates, setRates] = useState(null);\n\n    useEffect(() => {\n        fetchRates();\n    }, []);\n\n    const fetchRates = async () => {\n        try {\n            const currencies = ['USD', 'EUR', 'RUB', 'BYN'];\n            const promises = currencies.map(cur => fetch(`https://api.nbrb.by/api/exrates/rates/${cur}?parammode=2`));\n\n            const results = await Promise.all(promises);\n            const data = await Promise.all(results.map(result => result.json()));\n\n            const ratesToUSD = data.reduce((acc, curr) => {\n                if (curr.Cur_Abbreviation === 'USD') {\n                    acc['USD'] = 1;\n                } else {\n                    acc[curr.Cur_Abbreviation] = curr.Cur_OfficialRate / data.find(item => item.Cur_Abbreviation === 'USD').Cur_OfficialRate;\n                }\n                return acc;\n            }, {});\n\n            setRates(ratesToUSD);\n        } catch (error) {\n            console.error('Failed to fetch exchange rates:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Exchange Rates to USD</h1>\n            {rates ? (\n                <ul>\n                    {Object.entries(rates).map(([currency, rate]) => (\n                        <li key={currency}>{currency}: {rate}</li>\n                    ))}\n                </ul>\n            ) : <p>Loading...</p>}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZO,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MAC/C,MAAMC,QAAQ,GAAGD,UAAU,CAACE,GAAG,CAACC,GAAG,IAAIC,KAAK,CAAE,yCAAwCD,GAAI,cAAa,CAAC,CAAC;MAEzG,MAAME,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MAC3C,MAAMO,IAAI,GAAG,MAAMF,OAAO,CAACC,GAAG,CAACF,OAAO,CAACH,GAAG,CAACO,MAAM,IAAIA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MAEpE,MAAMC,UAAU,GAAGH,IAAI,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;QAC1C,IAAIA,IAAI,CAACC,gBAAgB,KAAK,KAAK,EAAE;UACjCF,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;QAClB,CAAC,MAAM;UACHA,GAAG,CAACC,IAAI,CAACC,gBAAgB,CAAC,GAAGD,IAAI,CAACE,gBAAgB,GAAGR,IAAI,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,gBAAgB,KAAK,KAAK,CAAC,CAACC,gBAAgB;QAC5H;QACA,OAAOH,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MAENf,QAAQ,CAACa,UAAU,CAAC;IACxB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IAC3D;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7B5B,KAAK,gBACFH,OAAA;MAAA2B,QAAA,EACKK,MAAM,CAACC,OAAO,CAAC9B,KAAK,CAAC,CAACK,GAAG,CAAC,CAAC,CAAC0B,QAAQ,EAAEC,IAAI,CAAC,kBACxCnC,OAAA;QAAA2B,QAAA,GAAoBO,QAAQ,EAAC,IAAE,EAACC,IAAI;MAAA,GAA3BD,QAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwB,CAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBACL/B,OAAA;MAAA2B,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEd;AAAC7B,EAAA,CA1CQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}