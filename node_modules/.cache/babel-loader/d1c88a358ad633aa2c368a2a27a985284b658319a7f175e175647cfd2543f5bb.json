{"ast":null,"code":"var _jsxFileName = \"/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyConverter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyConverter = () => {\n  _s();\n  const initialCurrencies = ['USD', 'EUR', 'RUB', 'BYN'];\n  const [values, setValues] = useState({\n    USD: '1',\n    EUR: '',\n    RUB: '',\n    BYN: ''\n  });\n  const [availableCurrencies, setAvailableCurrencies] = useState(initialCurrencies);\n  const [allCurrencies, setAllCurrencies] = useState([]);\n  const [selectedCurrency, setSelectedCurrency] = useState('');\n  useEffect(() => {\n    const fetchAllCurrencies = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/currencies');\n        setAllCurrencies(response.data.map(currency => currency.Cur_Abbreviation));\n      } catch (error) {\n        console.error(\"Error fetching all currencies:\", error);\n      }\n    };\n    fetchAllCurrencies();\n  }, []);\n  const handleInputChange = async (currency, inputValue) => {\n    if (inputValue === '' || inputValue === undefined) {\n      setValues(prevValues => ({\n        ...prevValues,\n        [currency]: ''\n      }));\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8000/api/currencies/convert/${currency}`, {\n        value: inputValue\n      });\n      setValues(prevValues => ({\n        ...prevValues,\n        ...response.data\n      }));\n    } catch (error) {\n      console.error(\"Error converting currency:\", error);\n    }\n  };\n  const addCurrency = () => {\n    if (selectedCurrency && !values[selectedCurrency]) {\n      setValues(prevValues => ({\n        ...prevValues,\n        [selectedCurrency]: ''\n      }));\n      setAvailableCurrencies(prevCurrencies => [...prevCurrencies, selectedCurrency]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [availableCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [currency, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: values[currency] || '',\n          onChange: e => handleInputChange(currency, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, currency, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCurrency,\n          onChange: e => setSelectedCurrency(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), allCurrencies.filter(currency => !availableCurrencies.includes(currency)).map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: currency,\n            children: currency\n          }, currency, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCurrency,\n          children: \"Add Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(CurrencyConverter, \"dkNOlxVhmJ1YZJCuAZGRx9PyVRA=\");\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CurrencyConverter","_s","initialCurrencies","values","setValues","USD","EUR","RUB","BYN","availableCurrencies","setAvailableCurrencies","allCurrencies","setAllCurrencies","selectedCurrency","setSelectedCurrency","fetchAllCurrencies","response","get","data","map","currency","Cur_Abbreviation","error","console","handleInputChange","inputValue","undefined","prevValues","post","value","addCurrency","prevCurrencies","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","filter","includes","onClick","_c","$RefreshReg$"],"sources":["/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyConverter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CurrencyConverter = () => {\n    const initialCurrencies = ['USD', 'EUR', 'RUB', 'BYN'];\n\n    const [values, setValues] = useState({\n        USD: '1',\n        EUR: '',\n        RUB: '',\n        BYN: ''\n    });\n    const [availableCurrencies, setAvailableCurrencies] = useState(initialCurrencies);\n    const [allCurrencies, setAllCurrencies] = useState([]);\n    const [selectedCurrency, setSelectedCurrency] = useState('');\n\n    useEffect(() => {\n        const fetchAllCurrencies = async () => {\n            try {\n                const response = await axios.get('http://localhost:8000/api/currencies');\n                setAllCurrencies(response.data.map(currency => currency.Cur_Abbreviation));\n            } catch (error) {\n                console.error(\"Error fetching all currencies:\", error);\n            }\n        };\n\n        fetchAllCurrencies();\n    }, []);\n\n    const handleInputChange = async (currency, inputValue) => {\n        if (inputValue === '' || inputValue === undefined) {\n            setValues(prevValues => ({ ...prevValues, [currency]: '' }));\n            return;\n        }\n\n        try {\n            const response = await axios.post(`http://localhost:8000/api/currencies/convert/${currency}`, { value: inputValue });\n            setValues(prevValues => ({\n                ...prevValues,\n                ...response.data\n            }));\n        } catch (error) {\n            console.error(\"Error converting currency:\", error);\n        }\n    };\n\n    const addCurrency = () => {\n        if (selectedCurrency && !values[selectedCurrency]) {\n            setValues(prevValues => ({ ...prevValues, [selectedCurrency]: '' }));\n            setAvailableCurrencies(prevCurrencies => [...prevCurrencies, selectedCurrency]);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Currency Converter</h2>\n            <div>\n                {availableCurrencies.map(currency => (\n                    <div key={currency}>\n                        <label>{currency}:</label>\n                        <input\n                            type=\"number\"\n                            value={values[currency] || ''}\n                            onChange={e => handleInputChange(currency, e.target.value)}\n                        />\n                    </div>\n                ))}\n                <div>\n                    <select value={selectedCurrency} onChange={e => setSelectedCurrency(e.target.value)}>\n                        <option value=\"\">Select currency</option>\n                        {allCurrencies.filter(currency => !availableCurrencies.includes(currency)).map(currency => (\n                            <option key={currency} value={currency}>\n                                {currency}\n                            </option>\n                        ))}\n                    </select>\n                    <button onClick={addCurrency}>Add Currency</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CurrencyConverter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}