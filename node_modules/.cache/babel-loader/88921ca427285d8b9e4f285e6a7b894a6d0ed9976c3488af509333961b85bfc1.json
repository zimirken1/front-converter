{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import CurrencyInput from '../components/CurrencyInput';\n//\n// function CurrencyList() {\n//     const [currencies, setCurrencies] = useState([]);\n//     const [values, setValues] = useState({ USD: 1 });\n//     const [isLoading, setIsLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//\n//     useEffect(() => {\n//         fetch('https://api.nbrb.by/exrates/rates?periodicity=0')\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Failed to fetch data');\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 const usdCurrency = {\n//                     Cur_Abbreviation: 'USD',\n//                     Cur_OfficialRate: 1\n//                 };\n//                 const relevantCurrencies = data.filter(item =>\n//                     ['USD', 'EUR', 'RUB', 'BYN'].includes(item.Cur_Abbreviation)\n//                 );\n//                 relevantCurrencies.push(usdCurrency);\n//                 setCurrencies(relevantCurrencies);\n//                 setIsLoading(false);\n//             })\n//             .catch(error => {\n//                 setError(error.message);\n//                 setIsLoading(false);\n//             });\n//     }, []);\n//\n//     useEffect(() => {\n//         handleInputChange({ target: { value: 1 } }, 'USD');\n//     }, [currencies]);\n//\n//     function handleInputChange(e, abbreviation) {\n//         const newValue = parseFloat(e.target.value || 0);\n//         const usdRate = currencies.find(cur => cur.Cur_Abbreviation === 'USD').Cur_OfficialRate;\n//         const updatedValues = { ...values };\n//\n//         if (abbreviation === 'USD') {\n//             for (const currency of currencies) {\n//                 const currentRate = currency.Cur_OfficialRate;\n//                 updatedValues[currency.Cur_Abbreviation] = newValue * (currentRate / usdRate);\n//             }\n//         } else {\n//             const targetRate = currencies.find(cur => cur.Cur_Abbreviation === abbreviation).Cur_OfficialRate;\n//             const usdValue = abbreviation === 'BYN' ? newValue / usdRate : newValue * usdRate / targetRate;\n//\n//             for (const currency of currencies) {\n//                 const currentRate = currency.Cur_OfficialRate;\n//                 updatedValues[currency.Cur_Abbreviation] = usdValue * (currentRate / usdRate);\n//             }\n//         }\n//\n//         setValues(updatedValues);\n//     }\n//\n//     if (isLoading) return <p>Loading...</p>;\n//     if (error) return <p>{error}</p>;\n//\n//     return (\n//         <div>\n//             {currencies.map(currency => (\n//                 <CurrencyInput\n//                     key={currency.Cur_Abbreviation}\n//                     abbreviation={currency.Cur_Abbreviation}\n//                     value={values[currency.Cur_Abbreviation]}\n//                     onChange={handleInputChange}\n//                 />\n//             ))}\n//         </div>\n//     );\n// }\n//\n// export default CurrencyList;","map":{"version":3,"names":[],"sources":["/Users/alexrumyantsev/WebstormProjects/currency-converter/client/src/components/CurrencyList.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import CurrencyInput from '../components/CurrencyInput';\n//\n// function CurrencyList() {\n//     const [currencies, setCurrencies] = useState([]);\n//     const [values, setValues] = useState({ USD: 1 });\n//     const [isLoading, setIsLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//\n//     useEffect(() => {\n//         fetch('https://api.nbrb.by/exrates/rates?periodicity=0')\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Failed to fetch data');\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 const usdCurrency = {\n//                     Cur_Abbreviation: 'USD',\n//                     Cur_OfficialRate: 1\n//                 };\n//                 const relevantCurrencies = data.filter(item =>\n//                     ['USD', 'EUR', 'RUB', 'BYN'].includes(item.Cur_Abbreviation)\n//                 );\n//                 relevantCurrencies.push(usdCurrency);\n//                 setCurrencies(relevantCurrencies);\n//                 setIsLoading(false);\n//             })\n//             .catch(error => {\n//                 setError(error.message);\n//                 setIsLoading(false);\n//             });\n//     }, []);\n//\n//     useEffect(() => {\n//         handleInputChange({ target: { value: 1 } }, 'USD');\n//     }, [currencies]);\n//\n//     function handleInputChange(e, abbreviation) {\n//         const newValue = parseFloat(e.target.value || 0);\n//         const usdRate = currencies.find(cur => cur.Cur_Abbreviation === 'USD').Cur_OfficialRate;\n//         const updatedValues = { ...values };\n//\n//         if (abbreviation === 'USD') {\n//             for (const currency of currencies) {\n//                 const currentRate = currency.Cur_OfficialRate;\n//                 updatedValues[currency.Cur_Abbreviation] = newValue * (currentRate / usdRate);\n//             }\n//         } else {\n//             const targetRate = currencies.find(cur => cur.Cur_Abbreviation === abbreviation).Cur_OfficialRate;\n//             const usdValue = abbreviation === 'BYN' ? newValue / usdRate : newValue * usdRate / targetRate;\n//\n//             for (const currency of currencies) {\n//                 const currentRate = currency.Cur_OfficialRate;\n//                 updatedValues[currency.Cur_Abbreviation] = usdValue * (currentRate / usdRate);\n//             }\n//         }\n//\n//         setValues(updatedValues);\n//     }\n//\n//     if (isLoading) return <p>Loading...</p>;\n//     if (error) return <p>{error}</p>;\n//\n//     return (\n//         <div>\n//             {currencies.map(currency => (\n//                 <CurrencyInput\n//                     key={currency.Cur_Abbreviation}\n//                     abbreviation={currency.Cur_Abbreviation}\n//                     value={values[currency.Cur_Abbreviation]}\n//                     onChange={handleInputChange}\n//                 />\n//             ))}\n//         </div>\n//     );\n// }\n//\n// export default CurrencyList;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}